# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- 'feature-ms-eduardoAvello-mensaje'

pool:
  vmImage: ubuntu-latest

steps:

- script: |
#- task: Gradle@3
#  inputs:
#    gradleWrapperFile: 'gradlew'
#    tasks: 'build'
#    publishJUnitResults: true
#    testResultsFiles: '**/TEST-*.xml'
#    javaHomeOption: 'JDKVersion'
#    sonarQubeRunAnalysis: false
#    spotBugsAnalysis: false
#  displayName: Build

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build jacocoTestReport'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    codeCoverageToolOption: 'JaCoCo'
    codeCoverageClassFilesDirectories: 'build/classes/main/'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'alushiro'
    projectKey: 'alushiro_microservicio-spring-v4'
    projectName: 'microservicio-spring-v4'
  displayName: 'SonarCloud Prepare'
  
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'sonarqube'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.5.0.2730'
    spotBugsAnalysis: false
    


- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    command: 'login'
  
- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'alushiro/microservicio-spring-v4'
    command: 'build'
    Dockerfile: '**/Dockerfile'

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'alushiro/microservicio-spring-v4'
    command: 'push'